# Define a custom log format for richer logs
log_format api_main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for" $request_time $upstream_response_time $pipe';

# Logging Settings
access_log /var/log/nginx/access.log api_main;
error_log /var/log/nginx/error.log warn; # Log warnings and errors

# Gzip Settings for compressing API responses
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_min_length 256;
gzip_types application/json text/plain text/css text/xml application/xml application/javascript application/x-javascript;

upstream app_server {
    server app:5000;
}

# Main server block for handling all requests
server {
    listen 80 default_server;
    server_name _; # Listen on all hostnames for port 80

    # Set a reasonable limit for client request body size
    client_max_body_size 10M;

    location / {
        proxy_pass http://app_server;

        # Set proxy headers to pass information to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Recommended proxy settings
        proxy_redirect off; # Disable proxy redirects until SSL is implemented
        proxy_http_version 1.1;
        # Websocket support for the future
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade"; # Allows websockets if ever needed by the backend
        proxy_read_timeout 90s;
    }
} 